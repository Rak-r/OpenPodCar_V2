amcl:
  ros__parameters:
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.1
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
    map_topic: map
    set_initial_pose: false
    always_reset_initial_pose: false
    first_map_only: true
    initial_pose:
      x: 0.1
      y: 0.0
      z: 0.0
      yaw: 0.1
amcl_map_client:
  ros__parameters:
    use_sim_time: false

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: false
    
bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
    odom_topic: /odometry/filtered                                 # for real podcar change the topic name to /odometry/filtered published by EKF
========
    odom_topic: /rtabmap_odom                                 # for real podcar change the topic name to /odometry/filtered if using EKF
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
    bt_loop_duration: 10
    # default_server_timeout: 20 # ms
    # wait_for_server_timeout: 1000 # ms
    transform_tolerance: 0.1 # s
=======
    odom_topic: /rtabmap_odom                                 # for real podcar change the topic name to /odometry/filtered if using EKF
========
    odom_topic: /odom                                 # for real podcar change the topic name to /odometry/filtered if using EKF
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_mppi_smac_test.yaml
    bt_loop_duration: 10
    # default_server_timeout: 20 # ms
    # wait_for_server_timeout: 1000 # ms
    transform_tolerance: 0.5 # s
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
    
    # # # custom behavior tree definition
    # default_nav_to_pose_bt_xml: "/home/rakshit/podcar/src/pod2_navigation/behavior_trees/default.xml"

<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
=======
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
        plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    navigate_through_poses:
        plugin: "nav2_bt_navigator/NavigateThroughPosesNavigator"
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
     
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: False
#Local planner in ROS1 are now renamed as Controllers. Controllers are used to follow the global path and they publish to the velocity smoother which is used for collision avoidance. Setting up the configurations of local planner (ROS1)/ Controller (ROS2).


controller_server:
  ros__parameters:
    # controller server parameters (see Controller Server for more info)
    use_sim_time: False
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
    controller_frequency: 5.0
========
    # odom_topic: /odometry/filtered
    controller_frequency: 20.0 #5.0
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
    # odom_topic: /odometry/filtered
    controller_frequency: 20.0 #20.0 #5.0
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
    min_x_velocity_threshold:  0.07 #0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001 #0.001
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    #progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      required_movement_radius: 2.05 #0.5
      movement_time_allowance: 10.0
========
      required_movement_radius: 1.8 #2.05 #0.5                              # if less value means tight turns which makes the path deviate from the global plan (give acc. to the mechanical constraint)
      movement_time_allowance: 20.0
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
      required_movement_radius: 0.5 #2.05 #0.5                              # if less value means tight turns which makes the path deviate from the global plan (give acc. to the mechanical constraint)
      movement_time_allowance: 30.0
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
  
    general_goal_checker:
      # stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.6
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      yaw_goal_tolerance: 6.28 #3.14                 # do not care much about the orientation
========
      yaw_goal_tolerance: 0.5 #6.28 #3.14                              # means the controller should try to achive the orientaion to match the global plan orinetaion. 
                                                                       # Large value means to less consider the orientation
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: -0.2
      min_vel_y: 0.0
      max_vel_x: 0.2
      #max_vel_y: 0.26
      max_vel_theta: 1.0
      min_speed_xy: -0.2
      max_speed_xy: 0.2
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      min_speed_theta: -1.0     # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 0.02 #2.5
      # acc_lim_y: 2.5
      acc_lim_theta: 0.015 #3.2
      decel_lim_x: -0.02 #-2.5
      # decel_lim_y: -2.5
      decel_lim_theta: -0.015 #-3.2
      vx_samples: 15 #20
========
      min_speed_theta: -1.0
      forward_prune_distance: 2.0
      prune_distance: 1.5
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 0.28 # -0.15 #0.3 #2.5 #0.02
      # acc_lim_y: 2.5
      acc_lim_theta:  0.28 #0.12 #3.2
      decel_lim_x: -0.25 # -0.15 #-0.3 #-2.5 # -0.02
      # decel_lim_y: -2.5
      decel_lim_theta:  -0.28 #-0.12 #-3.2
      vx_samples: 20
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
      vy_samples: 0
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.6
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      trans_stopped_velocity: 0.1
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
========
      # trans_stopped_velocity: 0.1
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.05
      Oscillation.scale: 1.5                                 # if high value given, controller will choose paths that will minimize oscillation movements.
      Oscillation.oscillation_reset_angle: 0.01                # minimum anglular movement to trigger oscillation reset. Default was 0.2 radians = 11 degrees, 
                                                               # might make controller to move robot first by 11 degrees even for straight path.
      Oscillation.oscillation_reset_dist: 0.05   
      PathAlign.scale: 70.0 #32.0
      PathAlign.forward_point_distance: 0.5 #0.2
      GoalAlign.scale: 72.0 #24.0
      GoalAlign.forward_point_distance: 0.5 #0.2                    # if larger dist. given, means controller will try to align the path gradually while shorter means quick turnings
                                                               # tune by testing diff. values
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      # RotateToGoal.scale: 32.0
      # RotateToGoal.slowing_factor: 5.0
      # RotateToGoal.lookahead_time: -1.0
      publish_trajectories: true
      publish_local_plan: true

=======
      yaw_goal_tolerance: 0.5 #6.28 #3.14                              # means the controller should try to achive the orientaion to match the global plan orinetaion. 
                                                                       # Large value means to less consider the orientation
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      # inceased time_steps, prune_distance and reduced batch_size to attempt to drive vehicle at 1m/s
      # vx_std increase was required to make the vehicle actually drive faster
      # as you decrease wz_std it makes the vehile drive better in a straight line but makes it not want to turn around when given goals behind its current pose
      # unknown why vy_max and vy_std are set for a diff drive vehicle
      time_steps: 65
      model_dt: 0.05
      batch_size: 1800
      vx_std: 0.4                       # variability in forward trajectory velocities, allows the control to more trajectories velocitties in forward
      # vy_std: 0.0
      wz_std: 0.2
      vx_max: 0.2
      vx_min: -0.2
      # vy_max: 0.5
      wz_max: 1.0 #1.9
      ax_max: 2.5
      ax_min: -2.5
      iteration_count: 1
      prune_distance: 2.0
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015 
      visualize: false
      reset_period: 1.0 # (only in Humble)
      regenerate_noises: false
      enforce_path_inversion: true                              # to have car like behaviour (three point goals)
      inversion_xy_tolerance: 0.5
      inversion_yaw_tolerance: 3.14

      motion_model: "Ackermann"
      AckermannConstraints:
        min_turning_r: 2.05
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      
      critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 1.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.5
      # PreferForwardCritic:
      #   # increased cost_power to 2 to force vehicle to drive forwards along long paths after increasing max speed
      #   #  - this causes failures when operating in a narrow workspace and would crash the vehicle by forcing it to turn around when it can't!
      #   # increased threshold_to_consider to allow vehicle to back up over short distances
      #   enabled: true
      #   cost_power: 2
      #   cost_weight: 4.0
      #   threshold_to_consider: 2.0
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 1.5
        critical_weight: 20.0
        consider_footprint: false
        collision_cost: 10000.0
        collision_margin_distance: 0.1
        near_goal_distance: 0.5
        # inflation_radius: 0.55 # (only in Humble)
        # cost_scaling_factor: 10.0 # (only in Humble)
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 14.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 3
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: true
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 40.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      PathAngleCritic:
        # increased offset_from_furthest to default value to help reduce the vehicle oscillating along the path
        enabled: true
        cost_power: 1
        cost_weight: 30.0 #2.0
        offset_from_furthest: 20
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      
controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False
#local costmap configurations
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      track_unknown_space: true
      # unknown_cost_value: 250
      # lethal_cost_threshold: 150
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      width: 2
      height: 2
      resolution: 0.25
========
      width: 3
      height: 3
      resolution: 0.08 #0.25
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
      width: 3
      height: 3
      resolution: 0.08 #0.25
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      footprint: "[[-0.76, -0.4], [0.76, -0.4], [0.76, 0.4], [-0.76, 0.4]]"  # [right bottom, right top , left top ,left bottom]
      #robot_radius: 0.5
      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 0.8 #2.1 #3.0 #1.0
        inflation_radius: 0.22 #1.8 #1.2 #0.55
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 3.0
          clearing: True
          marking: True
          data_type: "LaserScan"
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
          raytrace_max_range: 10.0
========
          raytrace_max_range: 6.0
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
          raytrace_max_range: 6.0
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
          raytrace_min_range: 0.3
          obstacle_max_range: 5.0
          obstacle_min_range: 0.3
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False
#global costmap configurations
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      width: 50
      height: 50
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: false
      footprint: "[[-0.76, -0.4], [0.76, -0.4], [0.76, 0.4], [-0.76, 0.4]]"  # [right bottom, right top , left top ,left bottom]
      #robot_radius: 0.5
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      rolling_window: true
=======
      rolling_window: false
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      resolution: 0.05
      track_unknown_space: true
      # unknown_cost_value: 250 #120
      # lethal_cost_threshold: 150
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
=======
      # plugins: ["static_layer"]
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 3.0
          clearing: True
          marking: True
          data_type: "LaserScan"
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
          raytrace_max_range: 10.0 #6.0
========
          raytrace_max_range: 6.0 #6.0
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
          raytrace_max_range: 6.0 #6.0
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
          raytrace_min_range: 0.3 #0.0
          obstacle_max_range: 5.0 #3.0
          obstacle_min_range: 0.3 #0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        subscribe_to_updates: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 0.8 #4.58 #1.5 #1.0
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
        inflation_radius: 0.25 #1.6 #0.66 #0.55
========
        inflation_radius: 0.38 #0.25 #1.6 #0.66 #0.55
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
        inflation_radius: 0.38 #0.25 #1.6 #0.66 #0.55
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

planner_server:
  ros__parameters:
    planner_plugins: ["GridBased"]
    use_sim_time: False

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      downsample_costmap: false           # whether or not to downsample the map
      downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      tolerance: 0.3 # 0.25                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
      allow_unknown: true
      cost_scaling_factor: 0.9
     
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      max_iterations: 100000            # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
=======
      max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
      max_planning_time: 10.0              # max time in s for planner to plan, smooth
      motion_model_for_search: "DUBIN" #"DUBIN"    # Hybrid-A* DUBIN, REEDS_SHEPP
      angle_quantization_bins: 72         # Number of angle bins for search
      analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
      minimum_turning_radius: 2.25 #0.5       # minimum turning radius in m of path / vehicle
      reverse_penalty: 1.4                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.3 # 0.1                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.5           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 1.3                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
========
      minimum_turning_radius: 2.05 #0.5       # minimum turning radius in m of path / vehicle
      reverse_penalty: 1.4                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.1 # 0.8                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 2.0           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 1.8 #1.3                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
      minimum_turning_radius: 2.05 #0.5       # minimum turning radius in m of path / vehicle
      reverse_penalty: 1.0                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.1 # 0.8                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 2.0           # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 1.8 #1.3                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
      retrospective_penalty: 0.015
      lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path
      viz_expansions: False                   

      smoother:
<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
<<<<<<<< HEAD:src/pod2_navigation/config/podcar_sim2real.yaml
        max_iterations: 1000
        w_smooth: 1.0 #0.3
        w_data: 1.0 #0.2
========
        max_iterations: 100
        w_smooth: 0.2 #1.0 #0.3
        w_data: 0.5 #1.0 #0.2
>>>>>>>> Fortress:src/pod2_navigation/config/nav2_dwb_smac.yaml
=======
        max_iterations: 1000
        w_smooth: 0.2 #1.0 #0.3
        w_data: 0.5 #1.0 #0.2
>>>>>>> Fortress:pod2_navigation/config/podcar_sim2real.yaml
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2
        
planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False
    
    
#the map_server package has been changed to nav2_map_server which implements a server to handle the map load request and host a map topic. It has a map saver server running in background which saves the maps according to the requests. There are numerous parameters for the nav2_map_server. look at: https://navigation.ros.org/configuration/packages/configuring-map-server.html

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "maps/Sim_1.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.0
    occupied_thresh_default: 0.0
    map_subscribe_transient_local: True

##behavior server configurations
behavior_server:
  ros__parameters:
    use_sim_time: False
    local_costmap_topic: local_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    global_costmap_topic: global_costmap/costmap_raw
    global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    
    wait:
      plugin: "nav2_behaviors/Wait"
    local_frame: odom
    global_frame: map
    robot_base_frame: base_link
    transform_timeout: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2
robot_state_publisher:
  ros__parameters:
    use_sim_time: False  

#add waypoint following parameters
waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200